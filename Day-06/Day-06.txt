09-April-2024
 
* Callback Queue * 

Q. setInterval, clearInterval, etc

EventLoop
=> To push async tasks or parts into stack

waiting areas for async tasks => 
1. MicroTask Queue (High Priority) => Has code for promises or fetch
2. Callback Queue (Low Priority)

Can we create own promises? => Yes

* Inversion of Control *
control has been given to other.
Example, makePayment control is given to createOrder to execute.
there is no guarantee that makePayment will actually be called, or will be called only once.

New Promise- User Defined

new Promise( callback fn, )

pending, fulfilled, rejected

callback fn => (x, y) => {

}

this x, y is resolve, reject

JavaScript Visualizer
https://www.jsv9000.app/

IP Address, MAC Address

Server-Client

Server helps us to access HTML from anywhere via internet.

=> Latency, BandWidth, ThroughPut
=> responseTime, processingTime
=> IP Address, MAC Address
=> Router, ISP, Internet
=> DNS, HTTP vs https

Latency is Delay(say 100ms) both times in requesting and getting response for a request.

roundTrip is complete => requesting + receiving response.

responseTime = request reaching to server time + response reaching to client time

ThroughPut: actual capacity
BandWidth: maximum capacity

computernetworkingnotes

If https has no ssl certificate? then
=> no security
=> sensitive information can be intercepted. 
=> No encryption
=> transactions will not carry out

http[s]:=>
s => supports encrypted data packets.

ISP: Internet Service Provider

repl: read evalualte process loop

ES6

nodejs.org 

* Packages *
npm js


object through array: using reduce
flatMap, map, flat in array

flatMap => filter + map

replace function